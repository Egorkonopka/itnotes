<?php

namespace backend\models;
use yii\base\BaseObject;
use yii\db\ActiveRecord;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use yii\helpers\ArrayHelper;
use yii\helpers\Url;
use yii\web\UploadedFile;
use Yii;


class Articles extends ActiveRecord{
    public $file;
    public $categories_array;

    public function behaviors(){
        return [
            [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at'],
                ],
                // если вместо метки времени UNIX используется datetime:
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    public static function primaryKey()
    {
        return ['id'];
    }

    public static function tableName(){
        return 'articles';
    }

//
    public function getMmAtCt(){
        return $this->hasMany(MmAtCt::className(),['article'=>'id']);
    }

    public function getCategories(){
        return $this->hasMany(Categories::className(), ['id' => 'category'])->via('mmAtCt');
    }
//

    public function rules()
    {
        return [
            [['created_at', 'updated_at','content'], 'safe'],
            [['title','lemma','img','type'], 'string'],
            [['file'], 'image'],
            [['categories_array'], 'safe'],
        ];
    }

    public static function getListTitle() {
        $listTitle = self::find()->select("title")->distinct('title')->orderBy('title')->asArray()->all();
        $listTitle = ArrayHelper::map($listTitle, 'title', 'title') ;
        return $listTitle ;
    }
    public static function getListLemma() {
        $listLemma = self::find()->select("lemma")->distinct('lemma')->orderBy('lemma')->asArray()->all();
        $listLemma = ArrayHelper::map($listLemma, 'lemma', 'lemma') ;
        return $listLemma ;
    }


    public function getViewImage(){
        $dir = str_replace('admin.','',Url::home(true)).'uploads/images/blog/';
        return $dir.$this->img;
    }

    public function beforeSave($insert)
    {
        if($file = UploadedFile::getInstance($this, 'file')){
            $dir = Yii::getAlias('@images').'/blog/';
//            if(file_exists($dir.$this->img)){
//                unlink($dir.$this->img);
//            }
            $this->img = strtotime('now').'.'.$file->extension;
            $file->saveAs($dir.$this->img);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        $this->categories_array = $this->categories;
    }

    public function getCatsString(){
        $arr = ArrayHelper::map($this->categories,'id','title');
        return implode(', ',$arr);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        $arr = ArrayHelper::map($this->categories,'id','id');
        foreach ($this->categories_array as $one){
            if(!in_array($one,$arr)){
                $model = new MmAtCt();
                $model->article = $this->id;
                $model->category = $one;
                $model->save();
            }
            if(isset($arr[$one])){
                unset($arr[$one]);
            }
        }
        MmAtCt::deleteAll(['category'=>$arr,'article'=>$this->id]);
    }

}